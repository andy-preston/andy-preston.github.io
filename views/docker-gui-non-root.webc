---
# cSpell:words Ghidra blacktop
# cSpell:words DIYLC unzipper noninteractive workdir
title: "Running GUI Apps in Docker as a non root user"
tags: docker
date: "2023-07-11"
---

<h2>A Ready Made Image - Ghidra</h2>

<section><article><p>I Wanted to run The NSA's brilliant
<a href="https://ghidra-sre.org/">Ghidra</a> without &quot;polluting&quot; my
system with a Java runtime.</p>

<p>There's a nice Docker image to do just that at
<a href="https://github.com/blacktop/docker-ghidra">blacktop/docker-ghidra</a>
but their docs seem to be a bit Mac. focussed and I had to jump through a few
extra hoops to get things working on Linux.</p>
</article></section>

<section><article>
<p>I created a shared directory to serve as a volume to hold project files.
If left to the docker run command to create it, it'll be owned by root and part
of the point of all of this is to not have files owned by root in my home
directory.</p>

<p>Then I run blacktop's container, passing in my UID and GID to ensure I'm
the owner of any files we create in the shared directory.</p>

<p>Normally when I've used <code>--user</code> the programs in the container
don't care that this UID has no name within the container. But, in this case,
it did - I got messages saying
<code>User home directory does not exist</code> and
<code>Failed to find a supported JDK</code>.
The &quot;correct&quot; way to deal with this would be to create a matching
user in the container but, here, it seemed a lot easier to hack it by
passing the host system's password and group files as read only volumes.</p>

<p>The host password and group files will overwrite those already in the
container. In some cases may cause problems with users that should exist in the
container vanishing. But it worked fine for me this time round.</p>

<p><code>--env DISPLAY=:0.0</code> was required to start Java.
This was kinda odd as if it's not present Java complains that
it can't write to display <code>:0.0</code>... and if you say don't use the
default (<code>:0.0</code>) use <code>:0.0</code> instead... everything works.
My head is still spinning on that one.</p>

<p>We also need <code>--net=host</code> so that Java will access the X11
display using it's host network address rather than Docker's virtual network.
(better explanation to follow).</p></article>

<aside><syntax-highlight language="bash">#!/bin/bash

HOME_DIR=/home/$(id --user --name)
GHIDRA_HOME=${HOME_DIR}/Documents/ghidra

mkdir -p ${GHIDRA_HOME}

docker run --init --rm \
    --interactive --tty \
    --name ghidra \
    --user $(id --user):$(id --group) \
    --volume ${GHIDRA_HOME}:${HOME_DIR} \
    --volume /etc/group:/etc/group:ro \
    --volume /etc/passwd:/etc/passwd:ro \
    --env DISPLAY=:0.0 \
    --net host \
    blacktop/ghidra</syntax-highlight></aside>
</section>

<h2>No Dockerfile Available - DIY Layout Creator</h2>
<p>Coming soon</p>
